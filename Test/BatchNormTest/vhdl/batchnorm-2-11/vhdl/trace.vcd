$date
  Fri Aug 11 16:40:42 2023
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module numeric_std $end
$upscope $end
$scope module textio $end
$upscope $end
$scope module std_logic_textio $end
$upscope $end
$scope module system_types $end
$upscope $end
$scope module custom_types $end
$upscope $end
$scope module csv_util $end
$upscope $end
$scope module batchnormtest_tb $end
$var reg 1 ! clock $end
$var reg 1 " stopclock $end
$var reg 1 # reset $end
$var reg 1 $ enable $end
$var reg 1 % valuebus_0_enable $end
$var reg 1 & valuebus_0_lastvalue $end
$var reg 32 ' valuebus_0_value[31:0] $end
$var reg 1 ( valuebus_1_enable $end
$var reg 1 ) valuebus_1_lastvalue $end
$var reg 32 * valuebus_1_value[31:0] $end
$var reg 1 + valuebus_10_enable $end
$var reg 1 , valuebus_10_lastvalue $end
$var reg 32 - valuebus_10_value[31:0] $end
$var reg 1 . valuebus_11_enable $end
$var reg 1 / valuebus_11_lastvalue $end
$var reg 32 0 valuebus_11_value[31:0] $end
$var reg 1 1 valuebus_12_enable $end
$var reg 1 2 valuebus_12_lastvalue $end
$var reg 32 3 valuebus_12_value[31:0] $end
$var reg 1 4 valuebus_2_enable $end
$var reg 1 5 valuebus_2_lastvalue $end
$var reg 32 6 valuebus_2_value[31:0] $end
$var reg 1 7 valuebus_3_enable $end
$var reg 1 8 valuebus_3_lastvalue $end
$var reg 32 9 valuebus_3_value[31:0] $end
$var reg 1 : valuebus_4_enable $end
$var reg 1 ; valuebus_4_lastvalue $end
$var reg 32 < valuebus_4_value[31:0] $end
$var reg 1 = valuebus_5_enable $end
$var reg 1 > valuebus_5_lastvalue $end
$var reg 32 ? valuebus_5_value[31:0] $end
$var reg 1 @ valuebus_6_enable $end
$var reg 1 A valuebus_6_lastvalue $end
$var reg 32 B valuebus_6_value[31:0] $end
$var reg 1 C valuebus_7_enable $end
$var reg 1 D valuebus_7_lastvalue $end
$var reg 32 E valuebus_7_value[31:0] $end
$var reg 1 F valuebus_8_enable $end
$var reg 1 G valuebus_8_lastvalue $end
$var reg 32 H valuebus_8_value[31:0] $end
$var reg 1 I valuebus_9_enable $end
$var reg 1 J valuebus_9_lastvalue $end
$var reg 32 K valuebus_9_value[31:0] $end
$scope module uut $end
$var reg 1 L valuebus_2_enable $end
$var reg 32 M valuebus_2_value[31:0] $end
$var reg 1 N valuebus_2_lastvalue $end
$var reg 1 O valuebus_12_enable $end
$var reg 32 P valuebus_12_value[31:0] $end
$var reg 1 Q valuebus_12_lastvalue $end
$var reg 1 R valuebus_0_enable $end
$var reg 32 S valuebus_0_value[31:0] $end
$var reg 1 T valuebus_0_lastvalue $end
$var reg 1 U valuebus_1_enable $end
$var reg 32 V valuebus_1_value[31:0] $end
$var reg 1 W valuebus_1_lastvalue $end
$var reg 1 X valuebus_5_enable $end
$var reg 32 Y valuebus_5_value[31:0] $end
$var reg 1 Z valuebus_5_lastvalue $end
$var reg 1 [ valuebus_3_enable $end
$var reg 32 \ valuebus_3_value[31:0] $end
$var reg 1 ] valuebus_3_lastvalue $end
$var reg 1 ^ valuebus_4_enable $end
$var reg 32 _ valuebus_4_value[31:0] $end
$var reg 1 ` valuebus_4_lastvalue $end
$var reg 1 a valuebus_8_enable $end
$var reg 32 b valuebus_8_value[31:0] $end
$var reg 1 c valuebus_8_lastvalue $end
$var reg 1 d valuebus_6_enable $end
$var reg 32 e valuebus_6_value[31:0] $end
$var reg 1 f valuebus_6_lastvalue $end
$var reg 1 g valuebus_7_enable $end
$var reg 32 h valuebus_7_value[31:0] $end
$var reg 1 i valuebus_7_lastvalue $end
$var reg 1 j valuebus_11_enable $end
$var reg 32 k valuebus_11_value[31:0] $end
$var reg 1 l valuebus_11_lastvalue $end
$var reg 1 m valuebus_9_enable $end
$var reg 32 n valuebus_9_value[31:0] $end
$var reg 1 o valuebus_9_lastvalue $end
$var reg 1 p valuebus_10_enable $end
$var reg 32 q valuebus_10_value[31:0] $end
$var reg 1 r valuebus_10_lastvalue $end
$var reg 1 s enb $end
$var reg 1 t fin $end
$var reg 1 u rst $end
$var reg 1 v clk $end
$var reg 1 w fin_align_0 $end
$var reg 1 x fin_align_1 $end
$var reg 1 y fin_align_2 $end
$var reg 1 z fin_align_3 $end
$var reg 1 { fin_plustwo_0 $end
$var reg 1 | fin_multiplytwo_0 $end
$var reg 1 } fin_multiplytwo_1 $end
$var reg 1 !" fin_plustwo_1 $end
$var reg 1 "" rdy $end
$scope module align_0 $end
$var reg 1 #" input_enable $end
$var reg 32 $" input_value[31:0] $end
$var reg 1 %" input_lastvalue $end
$var reg 1 &" outputvalue_enable $end
$var reg 1 '" outputvalue_lastvalue $end
$var reg 32 (" outputvalue_value[31:0] $end
$var reg 1 )" outputweight_enable $end
$var reg 1 *" outputweight_lastvalue $end
$var reg 32 +" outputweight_value[31:0] $end
$var reg 1 ," clk $end
$var reg 1 -" rdy $end
$var reg 1 ." fin $end
$var reg 1 /" enb $end
$var reg 1 0" rst $end
$upscope $end
$scope module align_1 $end
$var reg 1 1" input_enable $end
$var reg 32 2" input_value[31:0] $end
$var reg 1 3" input_lastvalue $end
$var reg 1 4" outputvalue_enable $end
$var reg 1 5" outputvalue_lastvalue $end
$var reg 32 6" outputvalue_value[31:0] $end
$var reg 1 7" outputweight_enable $end
$var reg 1 8" outputweight_lastvalue $end
$var reg 32 9" outputweight_value[31:0] $end
$var reg 1 :" clk $end
$var reg 1 ;" rdy $end
$var reg 1 <" fin $end
$var reg 1 =" enb $end
$var reg 1 >" rst $end
$upscope $end
$scope module align_2 $end
$var reg 1 ?" input_enable $end
$var reg 32 @" input_value[31:0] $end
$var reg 1 A" input_lastvalue $end
$var reg 1 B" outputvalue_enable $end
$var reg 1 C" outputvalue_lastvalue $end
$var reg 32 D" outputvalue_value[31:0] $end
$var reg 1 E" outputweight_enable $end
$var reg 1 F" outputweight_lastvalue $end
$var reg 32 G" outputweight_value[31:0] $end
$var reg 1 H" clk $end
$var reg 1 I" rdy $end
$var reg 1 J" fin $end
$var reg 1 K" enb $end
$var reg 1 L" rst $end
$upscope $end
$scope module align_3 $end
$var reg 1 M" input_enable $end
$var reg 32 N" input_value[31:0] $end
$var reg 1 O" input_lastvalue $end
$var reg 1 P" outputvalue_enable $end
$var reg 1 Q" outputvalue_lastvalue $end
$var reg 32 R" outputvalue_value[31:0] $end
$var reg 1 S" outputweight_enable $end
$var reg 1 T" outputweight_lastvalue $end
$var reg 32 U" outputweight_value[31:0] $end
$var reg 1 V" clk $end
$var reg 1 W" rdy $end
$var reg 1 X" fin $end
$var reg 1 Y" enb $end
$var reg 1 Z" rst $end
$upscope $end
$scope module plustwo_0 $end
$var reg 1 [" inputa_enable $end
$var reg 32 \" inputa_value[31:0] $end
$var reg 1 ]" inputa_lastvalue $end
$var reg 1 ^" inputb_enable $end
$var reg 32 _" inputb_value[31:0] $end
$var reg 1 `" inputb_lastvalue $end
$var reg 1 a" output_enable $end
$var reg 1 b" output_lastvalue $end
$var reg 32 c" output_value[31:0] $end
$var reg 1 d" clk $end
$var reg 1 e" rdy $end
$var reg 1 f" fin $end
$var reg 1 g" enb $end
$var reg 1 h" rst $end
$var reg 1 i" rstn $end
$scope module fl_add_inst $end
$upscope $end
$upscope $end
$scope module multiplytwo_0 $end
$var reg 1 j" inputa_enable $end
$var reg 32 k" inputa_value[31:0] $end
$var reg 1 l" inputa_lastvalue $end
$var reg 1 m" inputb_enable $end
$var reg 32 n" inputb_value[31:0] $end
$var reg 1 o" inputb_lastvalue $end
$var reg 1 p" output_enable $end
$var reg 1 q" output_lastvalue $end
$var reg 32 r" output_value[31:0] $end
$var reg 1 s" clk $end
$var reg 1 t" rdy $end
$var reg 1 u" fin $end
$var reg 1 v" enb $end
$var reg 1 w" rst $end
$var reg 1 x" rstn $end
$scope module fl_mul_inst $end
$upscope $end
$upscope $end
$scope module multiplytwo_1 $end
$var reg 1 y" inputa_enable $end
$var reg 32 z" inputa_value[31:0] $end
$var reg 1 {" inputa_lastvalue $end
$var reg 1 |" inputb_enable $end
$var reg 32 }" inputb_value[31:0] $end
$var reg 1 !# inputb_lastvalue $end
$var reg 1 "# output_enable $end
$var reg 1 ## output_lastvalue $end
$var reg 32 $# output_value[31:0] $end
$var reg 1 %# clk $end
$var reg 1 &# rdy $end
$var reg 1 '# fin $end
$var reg 1 (# enb $end
$var reg 1 )# rst $end
$var reg 1 *# rstn $end
$scope module fl_mul_inst $end
$upscope $end
$upscope $end
$scope module plustwo_1 $end
$var reg 1 +# inputa_enable $end
$var reg 32 ,# inputa_value[31:0] $end
$var reg 1 -# inputa_lastvalue $end
$var reg 1 .# inputb_enable $end
$var reg 32 /# inputb_value[31:0] $end
$var reg 1 0# inputb_lastvalue $end
$var reg 1 1# output_enable $end
$var reg 1 2# output_lastvalue $end
$var reg 32 3# output_value[31:0] $end
$var reg 1 4# clk $end
$var reg 1 5# rdy $end
$var reg 1 6# fin $end
$var reg 1 7# enb $end
$var reg 1 8# rst $end
$var reg 1 9# rstn $end
$scope module fl_add_inst $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
1!
0"
1#
0$
0%
0&
b00000000000000000000000000000000 '
0(
0)
b00000000000000000000000000000000 *
0+
0,
b00000000000000000000000000000000 -
U.
U/
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU 0
U1
U2
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU 3
U4
U5
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU 6
07
08
b00000000000000000000000000000000 9
0:
0;
b00000000000000000000000000000000 <
U=
U>
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU ?
0@
0A
b00000000000000000000000000000000 B
0C
0D
b00000000000000000000000000000000 E
UF
UG
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU H
0I
0J
b00000000000000000000000000000000 K
UL
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU M
UN
UO
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU P
UQ
0R
b00000000000000000000000000000000 S
0T
0U
b00000000000000000000000000000000 V
0W
UX
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU Y
UZ
0[
b00000000000000000000000000000000 \
0]
0^
b00000000000000000000000000000000 _
0`
Ua
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU b
Uc
0d
b00000000000000000000000000000000 e
0f
0g
b00000000000000000000000000000000 h
0i
Uj
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU k
Ul
0m
b00000000000000000000000000000000 n
0o
0p
b00000000000000000000000000000000 q
0r
0s
0t
1u
1v
0w
0x
0y
0z
0{
0|
0}
0!"
0""
U#"
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU $"
U%"
0&"
0'"
b00000000000000000000000000000000 ("
0)"
0*"
b00000000000000000000000000000000 +"
1,"
0-"
0."
0/"
10"
U1"
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU 2"
U3"
04"
05"
b00000000000000000000000000000000 6"
07"
08"
b00000000000000000000000000000000 9"
1:"
0;"
0<"
0="
1>"
U?"
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU @"
UA"
0B"
0C"
b00000000000000000000000000000000 D"
0E"
0F"
b00000000000000000000000000000000 G"
1H"
0I"
0J"
0K"
1L"
UM"
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU N"
UO"
0P"
0Q"
b00000000000000000000000000000000 R"
0S"
0T"
b00000000000000000000000000000000 U"
1V"
0W"
0X"
0Y"
1Z"
0["
b00000000000000000000000000000000 \"
0]"
0^"
b00000000000000000000000000000000 _"
0`"
Ua"
Ub"
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU c"
1d"
0e"
0f"
0g"
1h"
0i"
0j"
b00000000000000000000000000000000 k"
0l"
0m"
b00000000000000000000000000000000 n"
0o"
Up"
Uq"
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU r"
1s"
0t"
0u"
0v"
1w"
0x"
0y"
b00000000000000000000000000000000 z"
0{"
0|"
b00000000000000000000000000000000 }"
0!#
U"#
U##
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU $#
1%#
0&#
0'#
0(#
1)#
0*#
0+#
b00000000000000000000000000000000 ,#
0-#
0.#
b00000000000000000000000000000000 /#
00#
U1#
U2#
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU 3#
14#
05#
06#
07#
18#
09#
#5000000
0!
0#
1$
04
05
b00000000000000000000000000000000 6
0L
b00000000000000000000000000000000 M
0N
1s
0u
0v
0#"
b00000000000000000000000000000000 $"
0%"
0,"
1/"
00"
0:"
1="
0>"
0H"
1K"
0L"
0V"
1Y"
0Z"
0d"
1g"
0h"
1i"
0s"
1v"
0w"
1x"
0%#
1(#
0)#
1*#
04#
17#
08#
19#
#10000000
1!
14
b10111110000010001001100111110100 6
1L
b10111110000010001001100111110100 M
1t
1v
1w
1x
1y
1z
1{
1|
1}
1!"
1""
1#"
b10111110000010001001100111110100 $"
1,"
1-"
1."
1:"
1;"
1<"
1H"
1I"
1J"
1V"
1W"
1X"
1d"
1e"
1f"
1s"
1t"
1u"
1%#
1&#
1'#
14#
15#
16#
#15000000
0!
1"
0v
0,"
0:"
0H"
0V"
0d"
0s"
0%#
04#
#20000000
