$date
  Sat Aug 12 14:09:53 2023
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module numeric_std $end
$upscope $end
$scope module textio $end
$upscope $end
$scope module std_logic_textio $end
$upscope $end
$scope module system_types $end
$upscope $end
$scope module custom_types $end
$upscope $end
$scope module csv_util $end
$upscope $end
$scope module linear_tb $end
$var reg 1 ! clock $end
$var reg 1 " stopclock $end
$var reg 1 # reset $end
$var reg 1 $ enable $end
$var reg 32 % truedualportmemory_1_icontrol_single_0_address[31:0] $end
$var reg 32 & truedualportmemory_1_icontrol_single_0_data[31:0] $end
$var reg 1 ' truedualportmemory_1_icontrol_single_0_enabled $end
$var reg 1 ( truedualportmemory_1_icontrol_single_0_iswriting $end
$var reg 32 ) truedualportmemory_1_icontrol_single_1_address[31:0] $end
$var reg 32 * truedualportmemory_1_icontrol_single_1_data[31:0] $end
$var reg 1 + truedualportmemory_1_icontrol_single_1_enabled $end
$var reg 1 , truedualportmemory_1_icontrol_single_1_iswriting $end
$var reg 32 - truedualportmemory_1_icontrol_single_2_address[31:0] $end
$var reg 32 . truedualportmemory_1_icontrol_single_2_data[31:0] $end
$var reg 1 / truedualportmemory_1_icontrol_single_2_enabled $end
$var reg 1 0 truedualportmemory_1_icontrol_single_2_iswriting $end
$var reg 32 1 truedualportmemory_1_icontrol_single_3_address[31:0] $end
$var reg 32 2 truedualportmemory_1_icontrol_single_3_data[31:0] $end
$var reg 1 3 truedualportmemory_1_icontrol_single_3_enabled $end
$var reg 1 4 truedualportmemory_1_icontrol_single_3_iswriting $end
$var reg 32 5 truedualportmemory_1_ireadresult_single_0_data[31:0] $end
$var reg 32 6 truedualportmemory_1_ireadresult_single_1_data[31:0] $end
$var reg 32 7 truedualportmemory_1_ireadresult_single_2_data[31:0] $end
$var reg 32 8 truedualportmemory_1_ireadresult_single_3_data[31:0] $end
$var reg 1 9 valuebus_0_enable $end
$var reg 1 : valuebus_0_lastvalue $end
$var reg 32 ; valuebus_0_value[31:0] $end
$var reg 1 < valuebus_1_enable $end
$var reg 1 = valuebus_1_lastvalue $end
$var reg 32 > valuebus_1_value[31:0] $end
$var reg 1 ? valuebus_10_enable $end
$var reg 1 @ valuebus_10_lastvalue $end
$var reg 32 A valuebus_10_value[31:0] $end
$var reg 1 B valuebus_2_enable $end
$var reg 1 C valuebus_2_lastvalue $end
$var reg 32 D valuebus_2_value[31:0] $end
$var reg 1 E valuebus_3_enable $end
$var reg 1 F valuebus_3_lastvalue $end
$var reg 32 G valuebus_3_value[31:0] $end
$var reg 1 H valuebus_4_enable $end
$var reg 1 I valuebus_4_lastvalue $end
$var reg 32 J valuebus_4_value[31:0] $end
$var reg 1 K valuebus_5_enable $end
$var reg 1 L valuebus_5_lastvalue $end
$var reg 32 M valuebus_5_value[31:0] $end
$var reg 1 N valuebus_6_enable $end
$var reg 1 O valuebus_6_lastvalue $end
$var reg 32 P valuebus_6_value[31:0] $end
$var reg 1 Q valuebus_7_enable $end
$var reg 1 R valuebus_7_lastvalue $end
$var reg 32 S valuebus_7_value[31:0] $end
$var reg 1 T valuebus_8_enable $end
$var reg 1 U valuebus_8_lastvalue $end
$var reg 32 V valuebus_8_value[31:0] $end
$var reg 1 W valuebus_9_enable $end
$var reg 1 X valuebus_9_lastvalue $end
$var reg 32 Y valuebus_9_value[31:0] $end
$scope module uut $end
$var reg 1 Z valuebus_2_enable $end
$var reg 32 [ valuebus_2_value[31:0] $end
$var reg 1 \ valuebus_2_lastvalue $end
$var reg 1 ] valuebus_5_enable $end
$var reg 32 ^ valuebus_5_value[31:0] $end
$var reg 1 _ valuebus_5_lastvalue $end
$var reg 1 ` valuebus_10_enable $end
$var reg 32 a valuebus_10_value[31:0] $end
$var reg 1 b valuebus_10_lastvalue $end
$var reg 1 c truedualportmemory_1_icontrol_single_0_iswriting $end
$var reg 1 d truedualportmemory_1_icontrol_single_0_enabled $end
$var reg 32 e truedualportmemory_1_icontrol_single_0_address[31:0] $end
$var reg 32 f truedualportmemory_1_icontrol_single_0_data[31:0] $end
$var reg 1 g truedualportmemory_1_icontrol_single_1_iswriting $end
$var reg 1 h truedualportmemory_1_icontrol_single_1_enabled $end
$var reg 32 i truedualportmemory_1_icontrol_single_1_address[31:0] $end
$var reg 32 j truedualportmemory_1_icontrol_single_1_data[31:0] $end
$var reg 32 k truedualportmemory_1_ireadresult_single_0_data[31:0] $end
$var reg 32 l truedualportmemory_1_ireadresult_single_1_data[31:0] $end
$var reg 1 m valuebus_0_enable $end
$var reg 32 n valuebus_0_value[31:0] $end
$var reg 1 o valuebus_0_lastvalue $end
$var reg 1 p valuebus_1_enable $end
$var reg 32 q valuebus_1_value[31:0] $end
$var reg 1 r valuebus_1_lastvalue $end
$var reg 1 s valuebus_3_enable $end
$var reg 32 t valuebus_3_value[31:0] $end
$var reg 1 u valuebus_3_lastvalue $end
$var reg 1 v valuebus_4_enable $end
$var reg 32 w valuebus_4_value[31:0] $end
$var reg 1 x valuebus_4_lastvalue $end
$var reg 1 y truedualportmemory_1_icontrol_single_2_iswriting $end
$var reg 1 z truedualportmemory_1_icontrol_single_2_enabled $end
$var reg 32 { truedualportmemory_1_icontrol_single_2_address[31:0] $end
$var reg 32 | truedualportmemory_1_icontrol_single_2_data[31:0] $end
$var reg 1 } truedualportmemory_1_icontrol_single_3_iswriting $end
$var reg 1 !" truedualportmemory_1_icontrol_single_3_enabled $end
$var reg 32 "" truedualportmemory_1_icontrol_single_3_address[31:0] $end
$var reg 32 #" truedualportmemory_1_icontrol_single_3_data[31:0] $end
$var reg 32 $" truedualportmemory_1_ireadresult_single_2_data[31:0] $end
$var reg 32 %" truedualportmemory_1_ireadresult_single_3_data[31:0] $end
$var reg 1 &" valuebus_6_enable $end
$var reg 32 '" valuebus_6_value[31:0] $end
$var reg 1 (" valuebus_6_lastvalue $end
$var reg 1 )" valuebus_7_enable $end
$var reg 32 *" valuebus_7_value[31:0] $end
$var reg 1 +" valuebus_7_lastvalue $end
$var reg 1 ," valuebus_8_enable $end
$var reg 32 -" valuebus_8_value[31:0] $end
$var reg 1 ." valuebus_8_lastvalue $end
$var reg 1 /" valuebus_9_enable $end
$var reg 32 0" valuebus_9_value[31:0] $end
$var reg 1 1" valuebus_9_lastvalue $end
$var reg 1 2" enb $end
$var reg 1 3" fin $end
$var reg 1 4" rst $end
$var reg 1 5" clk $end
$var reg 1 6" fin_truedualportmemory_1_single_0 $end
$var reg 1 7" fin_nodectrl_type10_0 $end
$var reg 1 8" fin_weightvalue_0 $end
$var reg 1 9" fin_plusctrl_0 $end
$var reg 1 :" fin_bias_0 $end
$var reg 1 ;" fin_truedualportmemory_1_single_1 $end
$var reg 1 <" fin_nodectrl_type10_1 $end
$var reg 1 =" fin_weightvalue_1 $end
$var reg 1 >" fin_plusctrl_1 $end
$var reg 1 ?" fin_bias_1 $end
$var reg 1 @" rdy $end
$scope module truedualportmemory_1_single_0 $end
$var reg 1 A" controla_iswriting $end
$var reg 1 B" controla_enabled $end
$var reg 32 C" controla_address[31:0] $end
$var reg 32 D" controla_data[31:0] $end
$var reg 1 E" controlb_iswriting $end
$var reg 1 F" controlb_enabled $end
$var reg 32 G" controlb_address[31:0] $end
$var reg 32 H" controlb_data[31:0] $end
$var reg 32 I" readresulta_data[31:0] $end
$var reg 32 J" readresultb_data[31:0] $end
$var reg 1 K" clk $end
$var reg 1 L" rdy $end
$var reg 1 M" fin $end
$var reg 1 N" enb $end
$var reg 1 O" rst $end
$comment ram is not handled $end
$var reg 32 P" controla_data_vector[31:0] $end
$var reg 32 Q" controlb_data_vector[31:0] $end
$var reg 32 R" readresulta_data_vector[31:0] $end
$var reg 32 S" readresultb_data_vector[31:0] $end
$var reg 1 T" fin_a $end
$var reg 1 U" fin_b $end
$upscope $end
$scope module nodectrl_type10_0 $end
$var reg 1 V" input_enable $end
$var reg 32 W" input_value[31:0] $end
$var reg 1 X" input_lastvalue $end
$var reg 32 Y" ram_read_data[31:0] $end
$var reg 1 Z" outputvalue_enable $end
$var reg 1 [" outputvalue_lastvalue $end
$var reg 32 \" outputvalue_value[31:0] $end
$var reg 1 ]" outputweight_enable $end
$var reg 32 ^" outputweight_value[31:0] $end
$var reg 1 _" outputweight_lastvalue $end
$var reg 1 `" ram_ctrl_enabled $end
$var reg 32 a" ram_ctrl_address[31:0] $end
$var reg 1 b" ram_ctrl_iswriting $end
$var reg 32 c" ram_ctrl_data[31:0] $end
$var reg 1 d" clk $end
$var reg 1 e" rdy $end
$var reg 1 f" fin $end
$var reg 1 g" enb $end
$var reg 1 h" rst $end
$upscope $end
$scope module weightvalue_0 $end
$var reg 1 i" inputvalue_enable $end
$var reg 32 j" inputvalue_value[31:0] $end
$var reg 1 k" inputvalue_lastvalue $end
$var reg 1 l" inputweight_enable $end
$var reg 32 m" inputweight_value[31:0] $end
$var reg 1 n" inputweight_lastvalue $end
$var reg 1 o" output_enable $end
$var reg 1 p" output_lastvalue $end
$var reg 32 q" output_value[31:0] $end
$var reg 1 r" clk $end
$var reg 1 s" rdy $end
$var reg 1 t" fin $end
$var reg 1 u" enb $end
$var reg 1 v" rst $end
$var reg 1 w" rstn $end
$scope module fl_mul_inst $end
$upscope $end
$upscope $end
$scope module plusctrl_0 $end
$var reg 1 x" input_enable $end
$var reg 32 y" input_value[31:0] $end
$var reg 1 z" input_lastvalue $end
$var reg 1 {" output_enable $end
$var reg 1 |" output_lastvalue $end
$var reg 32 }" output_value[31:0] $end
$var reg 1 !# clk $end
$var reg 1 "# rdy $end
$var reg 1 ## fin $end
$var reg 1 $# enb $end
$var reg 1 %# rst $end
$var reg 1 &# rstn $end
$scope module fl_accum_inst $end
$upscope $end
$upscope $end
$scope module bias_0 $end
$var reg 1 '# input_enable $end
$var reg 32 (# input_value[31:0] $end
$var reg 1 )# input_lastvalue $end
$var reg 1 *# output_enable $end
$var reg 1 +# output_lastvalue $end
$var reg 32 ,# output_value[31:0] $end
$var reg 1 -# clk $end
$var reg 1 .# rdy $end
$var reg 1 /# fin $end
$var reg 1 0# enb $end
$var reg 1 1# rst $end
$var reg 1 2# rstn $end
$scope module fl_add_inst $end
$upscope $end
$upscope $end
$scope module truedualportmemory_1_single_1 $end
$var reg 1 3# controla_iswriting $end
$var reg 1 4# controla_enabled $end
$var reg 32 5# controla_address[31:0] $end
$var reg 32 6# controla_data[31:0] $end
$var reg 1 7# controlb_iswriting $end
$var reg 1 8# controlb_enabled $end
$var reg 32 9# controlb_address[31:0] $end
$var reg 32 :# controlb_data[31:0] $end
$var reg 32 ;# readresulta_data[31:0] $end
$var reg 32 <# readresultb_data[31:0] $end
$var reg 1 =# clk $end
$var reg 1 ># rdy $end
$var reg 1 ?# fin $end
$var reg 1 @# enb $end
$var reg 1 A# rst $end
$comment ram is not handled $end
$var reg 32 B# controla_data_vector[31:0] $end
$var reg 32 C# controlb_data_vector[31:0] $end
$var reg 32 D# readresulta_data_vector[31:0] $end
$var reg 32 E# readresultb_data_vector[31:0] $end
$var reg 1 F# fin_a $end
$var reg 1 G# fin_b $end
$upscope $end
$scope module nodectrl_type10_1 $end
$var reg 1 H# input_enable $end
$var reg 32 I# input_value[31:0] $end
$var reg 1 J# input_lastvalue $end
$var reg 32 K# ram_read_data[31:0] $end
$var reg 1 L# outputvalue_enable $end
$var reg 1 M# outputvalue_lastvalue $end
$var reg 32 N# outputvalue_value[31:0] $end
$var reg 1 O# outputweight_enable $end
$var reg 32 P# outputweight_value[31:0] $end
$var reg 1 Q# outputweight_lastvalue $end
$var reg 1 R# ram_ctrl_enabled $end
$var reg 32 S# ram_ctrl_address[31:0] $end
$var reg 1 T# ram_ctrl_iswriting $end
$var reg 32 U# ram_ctrl_data[31:0] $end
$var reg 1 V# clk $end
$var reg 1 W# rdy $end
$var reg 1 X# fin $end
$var reg 1 Y# enb $end
$var reg 1 Z# rst $end
$upscope $end
$scope module weightvalue_1 $end
$var reg 1 [# inputvalue_enable $end
$var reg 32 \# inputvalue_value[31:0] $end
$var reg 1 ]# inputvalue_lastvalue $end
$var reg 1 ^# inputweight_enable $end
$var reg 32 _# inputweight_value[31:0] $end
$var reg 1 `# inputweight_lastvalue $end
$var reg 1 a# output_enable $end
$var reg 1 b# output_lastvalue $end
$var reg 32 c# output_value[31:0] $end
$var reg 1 d# clk $end
$var reg 1 e# rdy $end
$var reg 1 f# fin $end
$var reg 1 g# enb $end
$var reg 1 h# rst $end
$var reg 1 i# rstn $end
$scope module fl_mul_inst $end
$upscope $end
$upscope $end
$scope module plusctrl_1 $end
$var reg 1 j# input_enable $end
$var reg 32 k# input_value[31:0] $end
$var reg 1 l# input_lastvalue $end
$var reg 1 m# output_enable $end
$var reg 1 n# output_lastvalue $end
$var reg 32 o# output_value[31:0] $end
$var reg 1 p# clk $end
$var reg 1 q# rdy $end
$var reg 1 r# fin $end
$var reg 1 s# enb $end
$var reg 1 t# rst $end
$var reg 1 u# rstn $end
$scope module fl_accum_inst $end
$upscope $end
$upscope $end
$scope module bias_1 $end
$var reg 1 v# input_enable $end
$var reg 32 w# input_value[31:0] $end
$var reg 1 x# input_lastvalue $end
$var reg 1 y# output_enable $end
$var reg 1 z# output_lastvalue $end
$var reg 32 {# output_value[31:0] $end
$var reg 1 |# clk $end
$var reg 1 }# rdy $end
$var reg 1 !$ fin $end
$var reg 1 "$ enb $end
$var reg 1 #$ rst $end
$var reg 1 $$ rstn $end
$scope module fl_add_inst $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
1!
0"
1#
0$
b00000000000000000000000000000000 %
b00000000000000000000000000000000 &
0'
0(
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU )
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU *
U+
U,
b00000000000000000000000000000000 -
b00000000000000000000000000000000 .
0/
00
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU 1
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU 2
U3
U4
b00000000000000000000000000000000 5
b00000000000000000000000000000000 6
b00000000000000000000000000000000 7
b00000000000000000000000000000000 8
09
0:
b00000000000000000000000000000000 ;
0<
0=
b00000000000000000000000000000000 >
U?
U@
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU A
UB
UC
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU D
UE
UF
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU G
UH
UI
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU J
UK
UL
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU M
0N
0O
b00000000000000000000000000000000 P
0Q
0R
b00000000000000000000000000000000 S
UT
UU
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU V
UW
UX
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU Y
UZ
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU [
U\
U]
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU ^
U_
U`
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU a
Ub
0c
0d
b00000000000000000000000000000000 e
b00000000000000000000000000000000 f
Ug
Uh
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU i
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU j
b00000000000000000000000000000000 k
b00000000000000000000000000000000 l
0m
b00000000000000000000000000000000 n
0o
0p
b00000000000000000000000000000000 q
0r
Us
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU t
Uu
Uv
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU w
Ux
0y
0z
b00000000000000000000000000000000 {
b00000000000000000000000000000000 |
U}
U!"
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU ""
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU #"
b00000000000000000000000000000000 $"
b00000000000000000000000000000000 %"
0&"
b00000000000000000000000000000000 '"
0("
0)"
b00000000000000000000000000000000 *"
0+"
U,"
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU -"
U."
U/"
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU 0"
U1"
02"
03"
14"
15"
06"
07"
08"
09"
0:"
0;"
0<"
0="
0>"
0?"
0@"
0A"
0B"
b00000000000000000000000000000000 C"
b00000000000000000000000000000000 D"
UE"
UF"
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU G"
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU H"
b00000000000000000000000000000000 I"
b00000000000000000000000000000000 J"
1K"
0L"
0M"
0N"
1O"
b00000000000000000000000000000000 P"
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU Q"
b00000000000000000000000000000000 R"
b00000000000000000000000000000000 S"
0T"
0U"
UV"
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU W"
UX"
b00000000000000000000000000000000 Y"
0Z"
0["
b00000000000000000000000000000000 \"
0]"
b00000000000000000000000000000000 ^"
0_"
0`"
b00000000000000000000000000000000 a"
0b"
b00000000000000000000000000000000 c"
1d"
0e"
0f"
0g"
1h"
0i"
b00000000000000000000000000000000 j"
0k"
0l"
b00000000000000000000000000000000 m"
0n"
Uo"
Up"
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU q"
1r"
0s"
0t"
0u"
1v"
0w"
Ux"
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU y"
Uz"
U{"
U|"
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU }"
1!#
0"#
0##
0$#
1%#
0&#
U'#
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU (#
U)#
U*#
U+#
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU ,#
1-#
0.#
0/#
00#
11#
02#
03#
04#
b00000000000000000000000000000000 5#
b00000000000000000000000000000000 6#
U7#
U8#
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU 9#
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU :#
b00000000000000000000000000000000 ;#
b00000000000000000000000000000000 <#
1=#
0>#
0?#
0@#
1A#
b00000000000000000000000000000000 B#
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU C#
b00000000000000000000000000000000 D#
b00000000000000000000000000000000 E#
0F#
0G#
UH#
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU I#
UJ#
b00000000000000000000000000000000 K#
0L#
0M#
b00000000000000000000000000000000 N#
0O#
b00000000000000000000000000000000 P#
0Q#
0R#
b00000000000000000000000000000000 S#
0T#
b00000000000000000000000000000000 U#
1V#
0W#
0X#
0Y#
1Z#
0[#
b00000000000000000000000000000000 \#
0]#
0^#
b00000000000000000000000000000000 _#
0`#
Ua#
Ub#
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU c#
1d#
0e#
0f#
0g#
1h#
0i#
Uj#
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU k#
Ul#
Um#
Un#
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU o#
1p#
0q#
0r#
0s#
1t#
0u#
Uv#
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU w#
Ux#
Uy#
Uz#
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU {#
1|#
0}#
0!$
0"$
1#$
0$$
#5000000
0!
0#
1$
0B
0C
b00000000000000000000000000000000 D
0Z
b00000000000000000000000000000000 [
0\
12"
04"
05"
0K"
1N"
0O"
0V"
b00000000000000000000000000000000 W"
0X"
0d"
1g"
0h"
0r"
1u"
0v"
1w"
0!#
1$#
0%#
1&#
0-#
10#
01#
12#
0=#
1@#
0A#
0H#
b00000000000000000000000000000000 I#
0J#
0V#
1Y#
0Z#
0d#
1g#
0h#
1i#
0p#
1s#
0t#
1u#
0|#
1"$
0#$
1$$
#10000000
1!
1B
b00111111110110101011111111110011 D
1Z
b00111111110110101011111111110011 [
13"
15"
16"
17"
18"
19"
1:"
1;"
1<"
1="
1>"
1?"
1@"
1K"
1L"
1M"
1T"
1U"
1V"
b00111111110110101011111111110011 W"
1d"
1e"
1f"
1r"
1s"
1t"
1!#
1"#
1##
1-#
1.#
1/#
1=#
1>#
1?#
1F#
1G#
1H#
b00111111110110101011111111110011 I#
1V#
1W#
1X#
1d#
1e#
1f#
1p#
1q#
1r#
1|#
1}#
1!$
#15000000
0!
1"
05"
0K"
0d"
0r"
0!#
0-#
0=#
0V#
0d#
0p#
0|#
#20000000
